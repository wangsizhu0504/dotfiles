# Add `~/bin` to the `$PATH`
export PATH="$HOME/bin:$PATH";

# Load the shell dotfiles, and then some:
# * ~/.path can be used to extend `$PATH`.
# * ~/.extra can be used for other settings you don’t want to commit.
for file in ~/.{path,bash_prompt,exports,aliases,functions,extra}; do
	[ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;

# Case-insensitive globbing (used in pathname expansion)
shopt -s nocaseglob;

# Append to the Bash history file, rather than overwriting it
shopt -s histappend;

# Autocorrect typos in path names when using `cd`
shopt -s cdspell;


# Enable some Bash 4 features when possible:
# * `autocd`, e.g. `**/qux` will enter `./foo/bar/baz/qux`
# * Recursive globbing, e.g. `echo **/*.txt`
for option in autocd globstar; do
	shopt -s "$option" 2> /dev/null;
done;

# Add tab completion for many Bash commands
if which brew &> /dev/null && [ -r "$(brew --prefix)/etc/profile.d/bash_completion.sh" ]; then
	# Ensure existing Homebrew v1 completions continue to work
	export BASH_COMPLETION_COMPAT_DIR="$(brew --prefix)/etc/bash_completion.d";
	source "$(brew --prefix)/etc/profile.d/bash_completion.sh";
elif [ -f /etc/bash_completion ]; then
	source /etc/bash_completion;
fi;


# Enable tab completion for `g` by marking it as an alias for `git`
if type _git &> /dev/null; then
	complete -o default -o nospace -F _git g;
fi;

# Add tab completion for SSH hostnames based on ~/.ssh/config, ignoring wildcards
[ -e "$HOME/.ssh/config" ] && complete -o "default" -o "nospace" -W "$(grep "^Host" ~/.ssh/config | grep -v "[?*]" | cut -d " " -f2- | tr ' ' '\n')" scp sftp ssh;


# Add tab completion for `defaults read|write NSGlobalDomain`
# You could just use `-g` instead, but I like being explicit
complete -W "NSGlobalDomain" defaults;

# <<< conda initialize <<<
# export PNPM_HOME="/Users/kriszu/Library/pnpm"



# Make colorcoding available for everyone
Red='\[\e[0;31m\]'              # Red
BRed='\[\e[1;31m\]'             # Bold Red
Green='\[\e[0;32m\]'            # Green
BGreen='\[\e[1;32m\]'           # Bold Green
Yellow='\[\e[0;33m\]'           # Yellow
BYellow='\[\e[1;33m\]'          # Bold Yellow
Blue='\[\e[0;34m\]'             # Blue
BBlue='\[\e[1;34m\]'            # Bold Blue
Purple='\[\e[0;35m\]'           # Purple
BPurple='\[\e[1;35m\]'          # Bold Purple
Cyan='\[\e[0;36m\]'             # Cyan
BCyan='\[\e[1;36m\]'            # Bold Cyan
White='\[\e[0;37m\]'            # White
BWhite='\[\e[1;37m\]'           # Bold White
NC='\[\e[m\]'                   # Color Reset


# Set prompt
if [ "$TERM" = "linux" ]; then # TTY prompt
	PS1="\[\e[1;37m\e[44m\]\t${NC}${BGreen} [\u] ${Purple}\w\[\e[0m\] > "
else
	PS1="${BBlue} ${BYellow}\u${BGreen}@${BBlue}\h${NC} ${BPurple}\w${NC} \n${BCyan}$ ${NC}"
fi
